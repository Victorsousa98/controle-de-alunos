Recebemos uma lista de funcionalidades que o cliente deseja implementar, agora que o CRUD básico foi feito e o sistema está funcionando.

OK - O cliente não gostaria que registros importantes do sistema, como as Pessoas, sejam apagados definitivamente do banco de dados.(colocar paranoid true nos modelos e criar uma coluna deletedAt)(para restaurar cria um metodo no Controller e uma rota de restauração)                                                                                                                                                                                    
OK - Para deixar a interface mais limpa, o cliente gostaria que na lista de Pessoas, por padrão, fossem exibidos somente os usuários ativos.(adiciona o escopo no modelo)

OK - Foram percebidas algumas falhas de validação dos formulários por parte do front-end, o que resultou em dados de email inválidos no banco. É desejável que essa validação não seja responsabilidade exclusiva do front.(usamos validação do sequelize. verifique a documentação para validar email usa-se isEmail true no atributo do modelo)

OK - É importante poder consultar todas as matrículas confirmadas referentes a estudante X de forma rápida.(ir no controller e fazer um metodo ou fazer um scopo de associação usando mixins)

OK - O cliente gostaria de poder consultar as turmas abertas por intervalo de data, para não receber informações desnecessárias (como turmas antigas).(VAMOS FAZER ATRAVÉS DE QUERIS STRINGS, usando operados do sequelize. const Op = Sequelize.Op;)

ok - O cliente quer poder consultar as matrículas por turma e saber quais delas estão lotadas, para organizar melhor as matrículas.(criar um metodo usando findAndCountAll )

O cliente gostaria que, uma vez que o cadastro de um estudante fosse desativado, todas as matrículas relativas a este estudante automaticamente passassem a constar como “canceladas”.

Durante o projeto vamos analisar esta lista e transformar esses requisitos em novas funcionalidades.